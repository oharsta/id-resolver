---

- name: install libhttp2 (needed by uri module)
  pip: name=httplib2 state=present

- name: create application group
  group: name="{{ id_resolver_group }}" state=present

- name: create appplication user
  user:
    name: "{{ id_resolver_user }}"
    group: "{{ id_resolver_group }}"
    home: "{{ id_resolver_dir }}"
    shell: /sbin/nologin

- name: create logging directory
  file:
    path: /var/log/id-resolver
    state: directory
    owner: "{{ id_resolver_user }}"
    group: "{{ id_resolver_group }}"
    mode: 0755

- name: copy logging config
  template:
    src: logback.xml.j2
    dest: "{{ id_resolver_dir }}/logback.xml"
    owner: "{{ id_resolver_user }}"
    group: "{{ id_resolver_group }}"
    mode: 0640
  tags: deploy
  notify: restart id-resolver

- name: copy users config
  template:
    src: id-resolver-api-users.yml.j2
    dest: "{{ id_resolver_dir }}/id-resolver-api-users.yml"
    owner: "{{ id_resolver_user }}"
    group: "{{ id_resolver_group }}"
    mode: 0640
  tags: deploy
  notify: restart id-resolver

- name: copy application properties
  template:
    src: application.yml.j2
    dest: "{{ id_resolver_dir }}/application.yml"
    owner: "{{ id_resolver_user }}"
    group: "{{ id_resolver_group }}"
    mode: 0400
  tags: deploy
  notify: restart id-resolver

- name: download id-resolver-server.jar
  maven_artifact:
    group_id: org.openconext
    artifact_id: id-resolver-server
    extension: jar
    version: "{{ id_resolver_server_version }}"
    repository_url: "{{ maven_snapshot_repo if 'SNAPSHOT' in id_resolver_server_version else maven_repo }}"
    dest: "{{ id_resolver_dir }}"
  tags: deploy
  register: maven_result

- name: set ownership of application artifact
  file: path={{ maven_result.dest }} owner={{ id_resolver_user }} group={{ id_resolver_group }} mode=0500
  tags: deploy

- name: change symlink to current version
  file:
    src: "{{ maven_result.dest }}"
    dest: "{{ id_resolver_dir }}/id-resolver-server.jar"
    state: link
    owner: "{{ id_resolver_user }}"
    group: "{{ id_resolver_group }}"
  tags: deploy
  when: maven_result.changed

- name: Copy systemd service file
  template: src=spring-boot.service.j2 dest=/etc/systemd/system/id-resolver.service
  notify:
    - "restart id-resolver"

- name: restart id-resolver
  systemd: name=id-resolver state=restarted daemon_reload=yes
  tags: deploy

- name: wait for restart
  uri:
    url: http://localhost:{{ server_port }}/actuator/health
    headers:
      Accept: "application/json"
  tags: deploy
  register: health_result
  until: health_result.status is defined and health_result.status == 200 and health_result.json.status == "UP"
  retries: 15
  delay: 5
  when: maven_result.changed

- name: ensure the service is started
  systemd: name=id-resolver enabled=yes state=started
